name: .NET CI

on:
  push:
    branches: [ master ]
    tags:
      - 'core-v*'
      - 'dist-v*'
      - 'dice-v*'
      - 'pick-v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  style:
    name: Code style (quiet verify)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x

      # Enforce only auto-fixable formatting/styles. Quiet unless failures.
      - name: Verify style formatting
        run: dotnet format style --verify-no-changes --verbosity minimal

      - name: Verify whitespace formatting
        run: dotnet format whitespace --verify-no-changes --verbosity minimal

      # Include fixable analyzer diagnostics.
      - name: Verify fixable analyzers (usings)
        run: dotnet format analyzers --diagnostics IDE0005,IDE0065 --verify-no-changes --verbosity minimal

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: style
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            global.json
            **/*.csproj
            Directory.Build.props

      - name: Restore (locked mode)
        run: dotnet restore --locked-mode

      # Enforce naming conventions via build.
      - name: Build (naming enforced)
        run: dotnet build --configuration Release --no-restore -warnaserror:IDE1006

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

  pack:
    name: Pack (from tag)
    # Only run on tag refs that match our prefixes.
    if: | 
      startsWith(github.ref, 'refs/tags/core-v') || 
      startsWith(github.ref, 'refs/tags/dist-v') || 
      startsWith(github.ref, 'refs/tags/dice-v') || 
      startsWith(github.ref, 'refs/tags/pick-v')
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repo (full history for tagging)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x

      - name: Determine project from tag
        id: which
        shell: bash
        run: |
          ref="${GITHUB_REF_NAME}"  # e.g. core-v0.1.0 or dist-v0.1.0-alpha.1
          if [[ "$ref" == core-v* ]]; then
            echo "project=src/RNGenie.Core/RNGenie.Core.csproj" >> $GITHUB_OUTPUT
            echo "prefix=core-v" >> $GITHUB_OUTPUT
          elif [[ "$ref" == dist-v* ]]; then
            echo "project=src/RNGenie.Distributions/RNGenie.Distributions.csproj" >> $GITHUB_OUTPUT
            echo "prefix=dist-v" >> $GITHUB_OUTPUT
          elif [[ "$ref" == dice-v* ]]; then
            echo "project=src/RNGenie.Dice/RNGenie.Dice.csproj" >> $GITHUB_OUTPUT
            echo "prefix=dice-v" >> $GITHUB_OUTPUT
          elif [[ "$ref" == pick-v* ]]; then
            echo "project=src/RNGenie.Picker/RNGenie.Picker.csproj" >> $GITHUB_OUTPUT
            echo "prefix=pick-v" >> $GITHUB_OUTPUT
          else
            echo "Unknown tag prefix: $ref" >&2
            exit 1
          fi
       
      - name: Extract version from tag
        id: ver
        shell: bash
        run: |
          tag="${GITHUB_REF_NAME}"
          prefix="${{ steps.which.outputs.prefix }}"
          echo "version=${tag#${prefix}}" >> $GITHUB_OUTPUT
          
      - name: Pack (version from tag)
        run: |
          dotnet pack "${{ steps.which.outputs.project }}" \
            -c Release -o nupkgs /p:Version=${{ steps.ver.outputs.version }} \
            /p:ContinuousIntegrationBuild=true
      
      # Keep as Actions artifact.
      - name: Upload nupkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs-${{ steps.ver.outputs.version }}
          path: nupkgs/*.nupkg
      
      # Attach to GitHub Release (creates one if none exist)
      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: nupkgs/*.nupkg
  
  publish:
    name: Publish to NuGet (requires approval)
    # only run for tag builds and only after 'pack' succeeded
    if: |
      (startsWith(github.ref, 'refs/tags/core-v') ||
       startsWith(github.ref, 'refs/tags/dist-v') ||
       startsWith(github.ref, 'refs/tags/dice-v') ||
       startsWith(github.ref, 'refs/tags/pick-v')) &&
      vars.ENABLE_PUBLISH == 'true'
    runs-on: ubuntu-latest
    needs: pack
    environment: nuget-prod
    steps:
      - name: Download nupkg artifact(s)
        uses: actions/download-artifact@v4
        with:
          pattern: nupkgs-*
          merge-multiple: true
      
      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push **/*.nupkg \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
